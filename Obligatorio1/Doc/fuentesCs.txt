***********************************
Archivo: Sistema.cs
Carpeta: C:\Users\matia\OneDrive\Desktop\obligatorioP2\Obligatorio1\Dominio\Sistema.cs
***********************************
using Dominio.Entidades;
namespace Dominio
{
    public class Sistema
    {
        private List<Usuario> _usuarios = new List<Usuario>();
        private List<Publicacion> _publicaciones = new List<Publicacion>();
        private List<Articulo> _articulos = new List<Articulo>();
        private List<Cliente> _clientes = new List<Cliente>();
        private List<Administrador> _administradores = new List<Administrador>();
        private List<Subasta> _subastas = new List<Subasta>();
        private List<Venta> _ventas = new List<Venta>();

        public List<Usuario> Usuarios
        {
            get { return _usuarios; }
        }

        public List<Publicacion> Publicaciones
        {
            get { return _publicaciones; }
        }

        public List<Articulo> Articulos
        {
            get { return _articulos; }
        }

        public List<Cliente> Clientes
        {
            get { return _clientes; }
        }

        public List<Administrador> Administradores
        {
            get { return _administradores; }
        }

        public List<Subasta> Subastas
        {
            get { return _subastas; }
        }

        public List<Venta> Ventas
        {
            get { return _ventas; }
        }




        public void AgregarCliente(Cliente cliente)
        {
            if (cliente == null) throw new Exception("Debe tener un valor!");
            cliente.Validar();
            _clientes.Add(cliente);
        }

        public Cliente BuscarClientes(string nombre)
        {
            Cliente? clienteEncontrado = null;
            foreach (Cliente i in _clientes)
            {
                clienteEncontrado = i.Nombre == nombre ? i : null;
            }
            return clienteEncontrado;
        }


        //Metodos Administrador
        public void AgregarAdministrador(Administrador administrador)
        {
            if (administrador == null) throw new Exception("Debe tener un valor!");
            administrador.Validar();
            _administradores.Add(administrador);
        }

        public Administrador BuscarAdministrador(string nombre)
        {
            Administrador? adminEncontrado = null;
            foreach (Administrador i in _administradores)
            {
                adminEncontrado = i.Nombre == nombre ? i : null;
            }
            return adminEncontrado;
        }



        public void AgregarArticulo(Articulo articulo)
        {
            if (articulo == null) throw new Exception("El articulo cargado es nulo");
            articulo.Validar();
            _articulos.Add(articulo);


        }


        public void AgregarSubasta(Subasta subasta)
        {
            if (subasta == null) throw new Exception("La carga de la subasta no puede esta vacia");
            subasta.Validar();
            _subastas.Add(subasta);
        }

        public void AgregarVenta(Venta venta)
        {
            if (venta == null) throw new Exception("La carga de la venta no puede ser nula");
            venta.Validar();
            _ventas.Add(venta);
        }


        public void PrecargarDatos()
        {
            //Precarga de clientes
            AgregarCliente(new Cliente("Juan", "Pérez", "juan.perez@mail.com", "password1", 1000));
            AgregarCliente(new Cliente("Ana", "Gómez", "ana.gomez@mail.com", "password2", 1500));
            AgregarCliente(new Cliente("Carlos", "Lopez", "carlos.lopez@mail.com", "password3", 2000));

            //Precarga de Administradores
            AgregarAdministrador(new Administrador("Marta", "Suarez", "marta.suarez@mail.com", "admin1"));
            AgregarAdministrador(new Administrador("Luis", "Ramirez", "luis.ramirez@mail.com", "admin2"));
            AgregarAdministrador(new Administrador("Sofia", "Martinez", "sofia.martinez@mail.com", "admin3"));

            //Precarga de articulos
            AgregarArticulo(new Articulo("Balde", "playa", 350));
            AgregarArticulo(new Articulo("sombrilla", "playa", 150));
            AgregarArticulo(new Articulo("protector solar", "playa", 400));
            AgregarArticulo(new Articulo("salvavidas", "playa", 110));
            AgregarArticulo(new Articulo("Bicicleta de carrera", "ciclismo", 15000));

            //Precarga de Subastas
            //AgregarSubasta(new Subasta("Vuelta ciclista", "ABIERTA", new DateTime(2024, 09, 01, 00, 00, 00),, 1235, new DateTime(2024, 09, 24, 00, 00, 00)));



            //Precargas de ventas
            //_sistema.AgregarVenta(new Venta());


        }

    }
}

***********************************
Archivo: Administrador.cs
Carpeta: C:\Users\matia\OneDrive\Desktop\obligatorioP2\Obligatorio1\Dominio\Entidades\Administrador.cs
***********************************
namespace Dominio.Entidades
{
    public class Administrador : Usuario
    {
        public bool Admin { get; }

        public Administrador(string nombre, string apellido, string email, string contrasenia) :
            base(nombre, apellido, email, contrasenia)
        {
            Admin = true;
        }
        public void Validar()
        {
            //todo:Agregar validaciones de Articulo
        }

        public override string ToString()
        {
            string respuesta = base.ToString();
            if (Admin) respuesta += $"Soy administrador \n";
            return respuesta;
        }

    }
}

***********************************
Archivo: Articulo.cs
Carpeta: C:\Users\matia\OneDrive\Desktop\obligatorioP2\Obligatorio1\Dominio\Entidades\Articulo.cs
***********************************
using static System.Runtime.InteropServices.JavaScript.JSType;

namespace Dominio.Entidades
{
    public class Articulo
    {

        #region Atributos
        public int Id { get; set; }
        public string NombreArt { get; set; }
        public string Categoria { get; set; }
        public decimal PrecioVenta { get; set; }
        private static int _ultimoId;
        #endregion
        #region Constructor
        public Articulo(string nombre, string categoria, decimal precioVenta)
        {
            Id = _ultimoId++;
            NombreArt = nombre;
            Categoria = categoria;
            PrecioVenta = precioVenta;
        }
        #endregion

        public void Validar()
        {
            //todo:Agregar validaciones de Articulo
        }

        public override string ToString()
        {
            string respuesta = string.Empty;

            respuesta += $"Id: {_ultimoId++} \n";
            respuesta += $"Nombre articulo: {NombreArt} \n";
            respuesta += $"Categoria: {Categoria} \n";
            respuesta += $"Precio de Venta: {PrecioVenta} \n";
            return respuesta;
        }




    }
}

***********************************
Archivo: Cliente.cs
Carpeta: C:\Users\matia\OneDrive\Desktop\obligatorioP2\Obligatorio1\Dominio\Entidades\Cliente.cs
***********************************

namespace Dominio.Entidades
{
    public class Cliente : Usuario
    {
        public decimal Saldo { get; set; }
        public Cliente(string nombre, string apellido, string email, string contrasenia, decimal saldo) :
            base(nombre, apellido, email, contrasenia)

        {
            Saldo = saldo;
        }
        public void Validar()
        {
            //todo:Agregar validaciones de Articulo
        }

        public override string ToString()
        {
            string respuesta = base.ToString();
            respuesta += $"saldo: {Saldo} \n";
            return respuesta;
        }



    }
}

***********************************
Archivo: Oferta.cs
Carpeta: C:\Users\matia\OneDrive\Desktop\obligatorioP2\Obligatorio1\Dominio\Entidades\Oferta.cs
***********************************
namespace Dominio.Entidades
{
    public class Oferta
    {
        public int Id { get; set; }  
        public int IdUser { get; set; }
        public decimal Monto { get; set; }
        public DateTime FchOfer { get; set; }
        public string Pnombre { get; set; }
        private static int _ultimoId;

        public Oferta(int id, int idUser, decimal monto, DateTime fchOfer, string pnombre)
        {
            Id = _ultimoId++;
            IdUser = idUser;
            Monto = monto;
            FchOfer = fchOfer;
            Pnombre = pnombre;
        }
    }
}

***********************************
Archivo: Publicacion.cs
Carpeta: C:\Users\matia\OneDrive\Desktop\obligatorioP2\Obligatorio1\Dominio\Entidades\Publicacion.cs
***********************************

namespace Dominio.Entidades
{
    public abstract class Publicacion
    {
        #region Atributos
        public int Id { get; set; }
        public string Nombre { get; set; }
        public string Estado { get; set; }
        public DateTime FchPublic { get; set; }
        private List<Articulo> _articulos = new List<Articulo>();
        public int IdUser { get; set; }
        public int IdPurchUser { get; set; }
        public DateTime PurchDate { get; set; }
        private static int _ultimoId;
        #endregion
        #region Constructor
        public Publicacion(int id,
                           string nombre,
                           string estado,
                           DateTime fchPublic,
                           List<Articulo> articulos,
                           int idUser,
                           int idPurchUser,
                           DateTime purchDate)
        {
            Id = _ultimoId++;
            
            Nombre = nombre;
            Estado = estado;
            FchPublic = fchPublic;
            _articulos = articulos;
            IdUser = idUser;
            IdPurchUser = idPurchUser;
            PurchDate = purchDate;
        }
        #endregion

        public void Validar()
        {
            //todo:Agregar validaciones de Articulo
        }

        public override string ToString()
        {
            string respuesta = string.Empty;

            respuesta += $"Id: {Id} \n";
            respuesta += $"Nombre: {Nombre} \n";
            respuesta += $"Estado: {Estado} \n";
            respuesta += $"Fecha de Publicacion: {FchPublic} \n";
            //respuesta += $"Lista de Articulos:  \n";
            respuesta += $"Id Usuario: {IdUser} \n";
            respuesta += $"Usuario de Compra: {IdPurchUser} \n";
            respuesta += $"Fecha de Compra: {PurchDate} \n";
            //respuesta += $"Id User: {IdUser} \n";
            return respuesta;
        }



    }
}

***********************************
Archivo: Subasta.cs
Carpeta: C:\Users\matia\OneDrive\Desktop\obligatorioP2\Obligatorio1\Dominio\Entidades\Subasta.cs
***********************************


namespace Dominio.Entidades
{
    public class Subasta : Publicacion
    {
        private List<Oferta> _ofertas;

        public Subasta(int id,
                       string nombre,
                       string estado,
                       DateTime fchPublic,
                       List<Articulo> articulos,
                       int idUser,
                       int idPurchUser,
                       DateTime purchDate,
                       List<Oferta> ofertas
                     ) : base(id, nombre, estado, fchPublic, articulos, idUser, idPurchUser, purchDate)
        {
            _ofertas = ofertas;
        }

        public void Validar()
        {
            //todo:Agregar validaciones de Articulo
        }

        public override string ToString()
        {
            string respuesta = string.Empty;

            respuesta += $"Id: {Id} \n";
            respuesta += $"Nombre: {Nombre} \n";
            respuesta += $"Estado: {Estado} \n";
            respuesta += $"Fecha de Publicacion: {FchPublic} \n";
            //respuesta += $"Lista de Articulos:  \n";
            respuesta += $"Id Usuario: {IdUser} \n";
            respuesta += $"Usuario de Compra: {IdPurchUser} \n";
            respuesta += $"Fecha de Compra: {PurchDate} \n";
            //respuesta += $"Id User: {IdUser} \n";
            return respuesta;
        }

    }
}

***********************************
Archivo: Usuario.cs
Carpeta: C:\Users\matia\OneDrive\Desktop\obligatorioP2\Obligatorio1\Dominio\Entidades\Usuario.cs
***********************************

namespace Dominio.Entidades
{
    public abstract class Usuario
    {
        private static int _ultimoId;

        public int Id { get; }
        public string Nombre { get; }
        public string Apellido { get; }
        public string Email { get; }
        public string Contrasenia { get; }
        public Usuario(string nombre, string apellido, string email, string contrasenia)
        {
            Id = _ultimoId++;
            Nombre = nombre;
            Apellido = apellido;
            Email = email;
            Contrasenia = contrasenia;
        }

        public void Validar()
        {
            //todo:Agregar validaciones de Articulo
        }

        public override string ToString()
        {
            string respuesta = string.Empty;

            respuesta += $"Nombre: {Nombre} \n";
            respuesta += $"Apellido: {Apellido} \n";
            respuesta += $"Email: {Email} \n";
            return respuesta;
        }

    }
}

***********************************
Archivo: Venta.cs
Carpeta: C:\Users\matia\OneDrive\Desktop\obligatorioP2\Obligatorio1\Dominio\Entidades\Venta.cs
***********************************



namespace Dominio.Entidades
{
    public class Venta : Publicacion
    {
        public bool OfertaR { get; set; }
        public Venta(int id,
                     string nombre,
                     string estado,
                     DateTime fchPublic,
                     List<Articulo> articulos,
                     int idUser,
                     int idPurchUser,
                     DateTime purchDate,
                     bool ofertar
            ) : base(id, nombre, estado, fchPublic, articulos, idUser, idPurchUser, purchDate)
        {
            OfertaR = ofertar;
            
        }
        public void Validar()
        {
            //todo:Agregar validaciones de Articulo
        }

        public override string ToString()
        {
            string respuesta = string.Empty;

            respuesta += $"Id: {Id} \n";
            respuesta += $"Nombre: {Nombre} \n";
            respuesta += $"Estado: {Estado} \n";
            respuesta += $"Fecha de Publicacion: {FchPublic} \n";
            //respuesta += $"Lista de Articulos:  \n";
            respuesta += $"Id Usuario: {IdUser} \n";
            respuesta += $"Usuario de Compra: {IdPurchUser} \n";
            respuesta += $"Fecha de Compra: {PurchDate} \n";
            respuesta += $"Es Oferta Relampago: {OfertaR} \n";
            return respuesta;
        }


    }
}
